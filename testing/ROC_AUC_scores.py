"""
File to store and edit all obtained AUC values

The qg results are obtained from dataset
samples/JetToyHIResultSoftDropSkinny_100k.root
where the splits are [0.7,0.1] and therefore 0.2
is used for the testing -> AUC scores
which boils down to jets of ~20k events
"""

from encodings import normalize_encoding
from locale import normalize
import numpy as np
import pandas as pd
import awkward as ak
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.legend_handler import HandlerTuple
import os
import time

# per job per dimension TODO result for every trial for every hidden dim NOTE not used anymore
auc_scores_lstm = {
    # "22_08_09_1909": [[0.4608, 0.4606, 0.5236]],
    # "22_08_09_1934": [[0.6078, 0.6223, 0.6018]],
    # "22_08_09_1941": [[0.4816, 0.5774, 0.4019]],
    # "22_08_11_1520": [[0.6820, 0.2809, 0.4418]],
    # "10993304": [[0.3523,0.4577,0.5105]],
    # "10993305": [[0.4364,0.3418,0.4589]],
    '11461549': [[0.7147680434973253, 0.5520276618934866, 0.4973879054384185], [0.5091304293356385, 0.4788564412873805, 0.5381140301424436], [0.47032109344658674, 0.5321356535247617, 0.5064130993097055], [0.5122298643214191, 0.4934703899976196, 0.5077611154959221], [0.4787725034765288, 0.5662870673131131, 0.4208942508863583], [0.7279988975332305, 0.5043033788100876, 0.49241803535410483], [0.5478357825634859, 0.5424499818343544, 0.5118151864797484], [0.4732501472043698, 0.5130711216346575, 0.4236591874318788], [0.6664574485411108, 0.4490986081357037, 0.5140464288846294], [0.5433181744152542, 0.522937572819183, 0.4823993685872139]], 
    '11461550': [[0.47396048658874235, 0.7378640959146089, 0.48379749689931223], [0.5305007454178725, 0.48680422445221183, 0.6856466343443455], [0.6028238182934316, 0.47921098457799327, 0.5027511557109031], [0.4347640345272547, 0.48329950764836327, 0.43824933288232426], [0.45059821350271234, 0.4916162413399982, 0.45675323536412715], [0.6983888951529047, 0.5061662970897383, 0.46826900189173276], [0.48864709788150984, 0.5011701181393369, 0.5647624058831635], [0.509899650467922, 0.5653512233622731, 0.5968542112977788], [0.557608273511983, 0.4871299532704426, 0.5201663722579272], [0.5036544267799201, 0.38651232131895114, 0.4546172059984215]], 
    '11474168': [[0.5097656005311886, 0.41395622705804236, 0.538487365480262], [0.5875321030806429, 0.508937497650994, 0.6726776161661718], [0.5751669360193433, 0.415938161636662, 0.5973628493754777], [0.5817015572343118, 0.716417985241979, 0.335980506383032], [0.5101928064043297, 0.6585823279588079, 0.5798261109231906], [0.5246351210834241, 0.5383783716064695, 0.5012540559501886], [0.5165056814622719, 0.34362385838313225, 0.6249295298229789], [0.4981270592951729, 0.28032472657571317, 0.5830859047117927], [0.5180679269866325, 0.37807218651733254, 0.47019205472244147], [0.48011801405645127, 0.4262988436626953, 0.4209957279412686]], 
    '11474169': [[0.5132928677916839, 0.48077197729920695, 0.650981571265707], [0.37570313576627706, 0.3177158893023139, 0.5751331103343731], [0.4493786096390674, 0.3104201901755177, 0.459583317673294], [0.4774996554791346, 0.44646020470803416, 0.6408827250974055], [0.5139887999398655, 0.6041455256135604, 0.7076633968504529], [0.6321043334460856, 0.5160220994475139, 0.44826173563347993], [0.3940779995239348, 0.5663334210295536, 0.5833327069317599], [0.50060134551058, 0.4321369063279087, 0.4948610014908358], [0.2712306285313389, 0.4348792924167826, 0.49795918367346936], [0.4675323536412723, 0.48849049748812967, 0.6093778579571791]], 
    '11478120': [[0.5960210972049962, 0.5492169980330991, 0.42128011425564704], [0.40707959058393156, 0.5289121910274239, 0.6371894614199272], [0.4244860375089263, 0.3142894726951554, 0.3998070683153556], [0.5101464526878892, 0.5938512421543203, 0.493871287004673], [0.473920396888037, 0.5513975019105248, 0.6980932336102028], [0.42121371568885374, 0.38562909510028687, 0.6996817880006514], [0.47372120118765737, 0.4276456070457649, 0.5412234875534008], [0.59927587978101, 0.5698826123451222, 0.3751757056413726], [0.3576715400709086, 0.6294934916876511, 0.33688377745204895], [0.600363312912642, 0.44579621904010225, 0.4963117475351098]], 
    '11478121': [[0.464867641347515, 0.41132784605554934, 0.45624334448328135], [0.29050375214542534, 0.3710790393505468, 0.41614863256536494], [0.5721827589230903, 0.584274814898335, 0.6573871537565302], [0.48546873629746556, 0.40186291827965076, 0.5693664574485411], [0.5802157327019206, 0.5942602823818294, 0.27723406121196176], [0.2965322408889891, 0.4906415604915999, 0.4735382919281893], [0.5839954397965448, 0.533532529033713, 0.5840505631350146], [0.7300221746157026, 0.5460467796695105, 0.6149183798749702], [0.5977875496423247, 0.3576615176457323, 0.6291527292316559], [0.636766013956227, 0.4067150248681425, 0.6433820673757533]],
} # best = 11461550 trial,dim 0,1 with last pooling,

# per job
auc_scores_lstm_ocsvm = {
    # '22_07_18_1327': [0.29389671361502345], 
    # '22_07_18_1334': [0.29325920434890046], 
    # '22_07_18_1340': [0.3298888065233507], 
    # '22_07_18_1345': [0.28823820113664445], 
    # '22_07_18_1357': [0.31957499382258464], 
    # '22_07_18_1404': [0.42499135161848284], 
    # '22_07_18_1410': [0.3892760069187052], 
    # '22_07_18_1414': [0.3968173956016802], 
    # '22_07_18_1417': [0.39421299728193726], 
    # '22_07_18_1432': [0.4506597479614529], 
    # '22_07_18_1435': [0.4375982209043736], 
    # '22_07_18_1440': [0.4157499382258463], 
    # '22_07_18_1445': [0.429424264887571], 
    # '22_07_18_1452': [0.4341586360266865], 
    # '22_07_18_1502': [0.4204348900420064], 
    # '22_07_18_1508': [0.5465678280207561], 
    # '22_07_18_1514': [0.4053471707437608], 
    # '22_07_18_1520': [0.6199456387447492], 
    # '22_08_09_1909': [0.4948356807511737], 
    # '22_08_09_1934': [0.345910551025451], 
    # '22_08_09_1941': [0.551830985915493], 
    # '22_08_11_1520': [0.4168668149246355],
    # '10993304': [0.5371237954040029], 
    # '10993305': [0.4154583642204102], 
    '11461549': [0.5354641289072116, 0.4660665040057586, 0.4748327428306114, 0.50633224581117, 0.3531689274040004, 0.3807468067669431, 0.4898040902051335, 0.47689467238784344, 0.6656595401245821, 0.4515588337025923], 
    '11461550': [0.25684344355012106, 0.5036707768149, 0.5155250800061075, 0.5085054204722153, 0.5496477238379249, 0.5056853415100042, 0.49730861635396506, 0.6754989670097502, 0.4059000414442544, 0.5315468678426863], 
    '11474168': [0.48803227042843383, 0.44048106496153167, 0.49969524450552016, 0.39706462499182016, 0.5103289676641333, 0.5140651827753939, 0.4579337702118643, 0.421235973612786, 0.4966832132073179, 0.3180992979405633], 
    '11474169': [0.4301935415517601, 0.3575451913758558, 0.4689891029656013, 0.4654934514961999, 0.4698768825195614, 0.48171778644056173, 0.5051755460202609, 0.45334654563697957, 0.4621978542471013, 0.4244405804688499], 
    '11478120': [0.49212185234004235, 0.4436358140679873, 0.39002284108153923, 0.49272263822282053, 0.44730846054849754, 0.5466456640896442, 0.47178113694365764, 0.5700202235496848, 0.47722217548058193, 0.5167509574245979], 
    '11478121': [0.5116713875723327, 0.6751711523060767, 0.3952205114781888, 0.3487580746183545, 0.5283472467615833, 0.36426601602303427, 0.42560943308622584, 0.42785240859672247, 0.3876159582192058, 0.4647427807536622]
} # best is 11478121 trial 1 with last reversed pooling, 11461550 trial 7 with last pooling, 11474168 trial 7 & 22_07_18_1520 with mean pooling

auc_scores_lstm_ocsvm_hypertraining = {
    '11120653': [0.46466643607457475, 0.7490943028172745, 0.756311212073054, 0.5800946050798814, 0.40214076712379987, 0.4916718861498288, 0.4815164857765189, 0.49476992206610515, 0.33656629678448674, 0.4370215603605962, 0.5755865296824996, 0.7613440402850618, 0.30060327877025855, 0.4915089136307972, 0.540464549581974, 0.6022710204946513, 0.4949640556786419, 0.6395029182364067, 0.509214023738521, 0.4563280390635468, 0.5345800886844722, 0.4880425535892906, 0.5118047570525345, 0.538574940871825, 0.5840177867521728, 0.41290131593297874, 0.503340469223746, 0.4972011105813725, 0.5888165951519571, 0.5944296429250295, 0.4532907672796054, 0.5566577234328307, 0.4920433263844095, 0.6718727505585627, 0.5595217395368839, 0.4416218725947531, 0.4882142512145036, 0.4939288841524026, 0.43668346249606593, 0.5081782289904118, 0.5595011732151705, 0.47388201786777095, 0.6195666738337182, 0.5257131995275978, 0.354114354980945, 0.4974438554997772, 0.64304001396017, 0.46625004284650357, 0.6454054525681416, 0.49328852368087306, 0.4900144275862929, 0.5012554804573202, 0.5127274370312203, 0.7034707225945973, 0.5243523945742304, 0.5194865898234101, 0.4752297351618663, 0.5581793196286844, 0.5007244954239934, 0.410877714520758], 
    '11120654': [0.5482551345691823, 0.38212163421238776, 0.4665273765786989, 0.5459479672060652, 0.6253202581384987, 0.7018852461570582, 0.6891786870584863, 0.4951628634552044, 0.4543521141243888, 0.40548778017718196, 0.5443166839610736, 0.4776702720051852, 0.49006522016870613, 0.5262326549563277, 0.4240560525749969, 0.5260715521029065, 0.5514002237366514, 0.4186988373796013, 0.44847606672213347, 0.673233867122865, 0.4349001131147694, 0.3672197760763821, 0.5598941146042697, 0.44879577954149563, 0.4368713638899016, 0.4908950400887468, 0.4778447741288137, 0.44465197732718836, 0.6086926986441809, 0.5167160569998722, 0.4710638085711704, 0.5029042139146747, 0.5039611982063674, 0.4447040163533419, 0.48822889692845106, 0.49975507380504997, 0.6883130318809147, 0.4605728032208106, 0.47074440736274314, 0.6432151393056685, 0.641150093639086, 0.5833730637275523, 0.6868877234639919, 0.511073717798905, 0.4099593970951628, 0.6777079769283263, 0.48367968888764246, 0.48807277984999053, 0.45666239759685645, 0.44373958050935924, 0.4644486200309741, 0.49960612377809566, 0.5740328375603356, 0.39199191058012606, 0.4065335464752129, 0.4638409787076248, 0.4973980486923247, 0.49605220106383974, 0.38320136610233924, 0.5387681396515567], 
    '11120655': [0.49520212643302075, 0.4216691128125068, 0.47511786683618296, 0.5028658857696634, 0.3767834272840302, 0.5362269524762162, 0.6784782791597722, 0.6651578465191501, 0.36079404698469675, 0.5840227725271335, 0.5128321383053975, 0.46911966794738763, 0.542649565458551, 0.319082430440649, 0.5162645327549834, 0.6898916528778828, 0.502966536101685, 0.3921570643757031, 0.5488786680502192, 0.5358442942479738, 0.7274847076933624, 0.3082193616338385, 0.6922499244343483, 0.2623193825117711, 0.34563884915849463, 0.403817545565309, 0.5335505261550639, 0.5115233723781835, 0.5249058155948809, 0.5263395375070502, 0.7444020653572775, 0.5736710572647415, 0.619240728795655, 0.5894310919158775, 0.5364615955103096, 0.6523285127121681, 0.40736274317338345, 0.5444441328335095, 0.5255966570378887, 0.4106997846768439, 0.39779192491422904, 0.6511668271462983, 0.5184009373256926, 0.6173436414230649, 0.5208988105810609, 0.5411282808736324, 0.37199708332164794, 0.5250725274451331, 0.5073318936908133, 0.47010747461149904, 0.34435158438579927, 0.5059620520203295, 0.34594017693268886, 0.5550105480301515, 0.47284341862124624, 0.3978134260687476, 0.5080286557415873, 0.308626325515015, 0.45733423077282626, 0.6436747654348687], 
    '11316965': [0.4619052515790884, 0.5200848828187079, 0.5386746563710414, 0.591776587424006, 0.4769239638157382, 0.40124395085272335, 0.2929466864851221, 0.3281811581332012, 0.39422242165322063, 0.5467656342996389, 0.4366314234699124, 0.3885763431210328, 0.24944486511920677, 0.525855294113981, 0.4687447999925214, 0.4723376740736587, 0.49440751854864085, 0.7115168285485474, 0.48477998709930725, 0.6422077011526488, 0.4366423298526392, 0.48849532427791953, 0.5267284279539937, 0.4672998600866901, 0.4278399441593204, 0.4936929946745691, 0.5781501528451638, 0.6093084418518414, 0.6060829570631293, 0.5170653728580643, 0.5548606631703921, 0.6581637390819319, 0.4341597255330884, 0.35046881865178414, 0.4238712672905117, 0.4502531838847289, 0.7528688460735464, 0.35845789980461995, 0.5474776652862302, 0.4324228061811145, 0.637644470619763, 0.5494006163664296, 0.7531863776163633, 0.5009233032005559, 0.6841605045604261, 0.587647430923646, 0.716200340902363, 0.5911820337599286, 0.5327443886660871, 0.4680159420154372, 0.7404689121350646, 0.4358081473795078, 0.49041235475035283, 0.44559273074010713, 0.49152698706503006, 0.6992982521742653, 0.5004110148233322, 0.5855057289670409, 0.3407319117642476, 0.6980405904403998], 
    '11316966': [0.7095405919984543, 0.5246855066637999, 0.4327524905503983, 0.5316942598149654, 0.29496717178799237, 0.6977878739720734, 0.4152265567303288, 0.4419630865686339, 0.4935801915160807, 0.44997616176346855, 0.4967131278570827, 0.5161909925743114, 0.5532705125688271, 0.3938665619653925, 0.4909623480507178, 0.4488680732784275, 0.4652245312592509, 0.491985055139555, 0.5259029705870439, 0.4954978452103841, 0.5654152371515021, 0.598323533169426, 0.6945427576944531, 0.3634209271671762, 0.4971936319189313, 0.474328556337699, 0.4420989489363161, 0.2855390713370914, 0.40615774368754143, 0.7153988775774119, 0.6479796705025973, 0.4905613047773072, 0.6708026786075978, 0.480489416134591, 0.4190902207140253, 0.5213621760414817, 0.3001570519112657, 0.46405380897626464, 0.5267979171925101, 0.39832415639129604, 0.4683072982397098, 0.32205052459700917, 0.4306410148544933, 0.7182407693050765, 0.4396830293568662, 0.43174972656140453, 0.45031519446080404, 0.5644754185713885, 0.4534007659396784, 0.38212101099051765, 0.3995092127772948, 0.5267779740926668, 0.5341372895457648, 0.4806919632423741, 0.514536026898256, 0.4662064173155965, 0.4790834275956412, 0.4510337692770315, 0.5085135223565266, 0.4683185162333717],
    '11316967': [0.49386593874352236, 0.44622717060387085, 0.5155733797010404, 0.4946817361714857, 0.46028799082617405, 0.4348190942716562, 0.49028365943417684, 0.4638864739041422, 0.7064880512786954, 0.4548986797044682, 0.6268368685593915, 0.33513974192382356, 0.6331220611193689, 0.5192295108019931, 0.38906307940158236, 0.5264595077170449, 0.5293453365865515, 0.5475184863187219, 0.6876923028982933, 0.5488817841595697, 0.47335539538753496, 0.49641086525008343, 0.5294388198670668, 0.5395365722173923, 0.5288938123416627, 0.44434691022177353, 0.5173570406932719, 0.5770479849678886, 0.5015708307235917, 0.5293618519661092, 0.5073191176424763, 0.6110188742743361, 0.48937811805691883, 0.43614967296432366, 0.46286002748408445, 0.5187648988978322, 0.47755310629360603, 0.6794611000489229, 0.5323277648459239, 0.5048698556929759, 0.6198832705437299, 0.36005397101395087, 0.6567060231277636, 0.5124441826912591, 0.46160953280172506, 0.36115738533496616, 0.5646069183859801, 0.4492731674939937, 0.38323221558490933, 0.5257424909554926, 0.49942944037792175, 0.7064662385132419, 0.6214522316017115, 0.5200668093844749, 0.45707185436551334, 0.5397702804186805, 0.7447965648010519, 0.46762050773885755, 0.5065815345592107, 0.5369480201799242], 
    '11524829': [0.6959929949861801, 0.7021342232941639, 0.46999529467488077, 0.4914646648780199, 0.4968359025654928, 0.4920193323424106, 0.6649852140611318, 0.4360973223272352, 0.4705471576408559, 0.6020451025667393, 0.47881076802747163, 0.704918778609779, 0.633576389862673, 0.5968533527778557, 0.4594472645234067, 0.48945290468133107, 0.5197489662307229, 0.5027699096016678, 0.36330937045242795, 0.43049237643847393, 0.38800858799737004, 0.430945458738038, 0.7072627160632321, 0.44442979873049704, 0.50180453892488, 0.4900106882550722, 0.4748632807022464, 0.4379115211911016, 0.44309672715034915, 0.4114214756024218, 0.29884143054348067, 0.43446229975102285, 0.3575785337459062, 0.5020809378242701, 0.40582120387768644, 0.4526591319142571, 0.476084483956711, 0.4917921679707584, 0.46776509521272125, 0.6643330123740703, 0.349507187306217, 0.5051244418269125, 0.48697684419141635, 0.41235381552009426, 0.6522272391582765, 0.5085518505015378, 0.6846883734844024, 0.4937369318164113, 0.40223019946215954, 0.7004677280135114, 0.508833858397759, 0.513949263507555, 0.6296161264891107, 0.42387625306547255, 0.41302377903045373, 0.29035314867269324, 0.6657361964146046, 0.49293733815707064, 0.49297379663647156, 0.4926151324502279], 
} # best = 11120653 trial 2 with mean pooling


auc_scores_ocsvm = {
    'mean_nu0.1': [0.5369], 
    'mean_nu0.2': [0.5385], 
    'mean_nu0.3': [0.5391], 
    'mean_nu0.4': [0.5395], 
    'mean_nu0.5': [0.5397], 
    'last_nu0.1': [0.4806], 
    'last_nu0.2': [0.4892], 
    'last_nu0.3': [0.4933], 
    'last_nu0.4': [0.4955], 
    'last_nu0.5': [0.4968], 
    'last_reversed_nu0.1': [0.6313], 
    'last_reversed_nu0.2': [0.6298], 
    'last_reversed_nu0.3': [0.6266], 
    'last_reversed_nu0.4': [0.6240], 
    'last_reversed_nu0.5': [0.6214]
}

# per variable
auc_scores_hand = {
    "sigJetRecur_dr12_first": [0.7208],
    "sigJetRecur_z_first": [0.5120],
    "sigJetRecur_jetpt_first": [0.4884],
    "sigJetRecur_dr12_last": [0.5962],
    "sigJetRecur_z_last": [0.5032],
    "sigJetRecur_jetpt_last": [0.2655],
    "sigJetRecur_dr12_mean": [0.7204],
    "sigJetRecur_z_mean": [0.5258],
    "sigJetRecur_jetpt_mean": [0.3093],
}# best is sigJetRecur_dr12 first splitting


# spread of pooling methods
auc_scores_last = {
    '11461549': [0.5354641289072116, 0.4660665040057586, 0.4748327428306114, 0.50633224581117, 0.3531689274040004, 0.3807468067669431, 0.4898040902051335, 0.47689467238784344, 0.6656595401245821, 0.4515588337025923], 
    '11461550': [0.25684344355012106, 0.5036707768149, 0.5155250800061075, 0.5085054204722153, 0.5496477238379249, 0.5056853415100042, 0.49730861635396506, 0.6754989670097502, 0.4059000414442544, 0.5315468678426863], 
}
auc_scores_mean = {
    '11474168': [0.48803227042843383, 0.44048106496153167, 0.49969524450552016, 0.39706462499182016, 0.5103289676641333, 0.5140651827753939, 0.4579337702118643, 0.421235973612786, 0.4966832132073179, 0.3180992979405633], 
    '11474169': [0.4301935415517601, 0.3575451913758558, 0.4689891029656013, 0.4654934514961999, 0.4698768825195614, 0.48171778644056173, 0.5051755460202609, 0.45334654563697957, 0.4621978542471013, 0.4244405804688499], 
}
auc_scores_first = {
    '11478120': [0.49212185234004235, 0.4436358140679873, 0.39002284108153923, 0.49272263822282053, 0.44730846054849754, 0.5466456640896442, 0.47178113694365764, 0.5700202235496848, 0.47722217548058193, 0.5167509574245979], 
    '11478121': [0.5116713875723327, 0.6751711523060767, 0.3952205114781888, 0.3487580746183545, 0.5283472467615833, 0.36426601602303427, 0.42560943308622584, 0.42785240859672247, 0.3876159582192058, 0.4647427807536622]
} # best is 11478121 trial 1 with last reversed pooling, 11461550 trial 7 with last pooling, 11474168 trial 7 & 22_07_18_1520 with mean pooling


auc_scores_lstm_ocsvm_digits_01 = {'22_09_06_1613': [0.9892361111111111, 0.9918055555555556, 0.9877777777777778, 0.9727083333333333, 0.9630555555555554, 0.9824305555555556, 0.7838888888888889, 0.9756249999999999, 0.9944444444444445, 0.18576388888888887]}
auc_scores_lstm_ocsvm_digits_05 = {'22_09_05_1618': [0.8865972222222221, 0.04118055555555556, 0.9443750000000001, 0.6231944444444445, 0.6321527777777778, 0.7145833333333332, 0.20152777777777775, 0.04541666666666667, 0.9493750000000001, 0.4759027777777778], }
# best is 22_09_06_1613 trial 8

# For QG - comparison of methods
dicts = [auc_scores_lstm_ocsvm_hypertraining, auc_scores_lstm_ocsvm,  auc_scores_ocsvm, auc_scores_hand] # auc_scores_lstm,
labels = ["LSTM + OCSVM - Hyper", "LSTM + OCSVM - Regular",  r'OCSVM', 'Cut And Count Variables'] #"Hand Cut LSTM Hidden State",

# For QG - comparison of pooling
# dicts = [auc_scores_mean, auc_scores_first, auc_scores_last]
# labels = ["Mean Pooling", "First Pooling", "Last Pooling"]
    
# for digits -> comment if want to use qg
# dicts = [auc_scores_lstm_ocsvm_digits_01, auc_scores_lstm_ocsvm_digits_05]
# labels = [r"$\nu = 0.1$", r"$\nu = 0.5$"]
# a = pd.DataFrame({"label":l, "val":val} for l,d in zip(labels,dicts) for val in np.concatenate(list(d.values())).flatten())

# store for best job/trials
best_dict = {}

# set font size & kwargs
plt.rcParams.update({'font.size': 16})

# plot settings
values = [ak.Array(list(d.values())) for d in dicts]
minimum = ak.min(values) #- 0.05 * ak.mean(values)
maximum = ak.max(values) #+ 0.05 * ak.mean(values)
binwidth = (maximum - minimum) / 60
bins = np.arange(minimum,maximum+binwidth,binwidth)

# make plot, get auc scores
print("Best AUC Scores:")
fig, ax = plt.subplots(figsize=[6.5 * 1.36, 6], dpi=160)
plt.grid(alpha=0.4,zorder=0)
kwargs = dict(bins=bins, linewidth=2., zorder=1)
plot_list = []
for i, (d, l) in enumerate(zip(dicts,labels)):
    try:
        p1 = ax.hist(np.concatenate(list(d.values())).ravel(), color=sns.color_palette()[i] , histtype='stepfilled',alpha=0.2,label=l, **kwargs)[2][0]
        p2 = ax.hist(np.concatenate(list(d.values())).ravel(), color=sns.color_palette()[i] , histtype='step',alpha=1,label=l,**kwargs)[2][0]
        plot_list.append((p1, p2))
    except:
        _, p1 = ax.hist(list(d.values()), color=sns.color_palette()[i] , histtype='stepfilled',alpha=0.2,label=l, **kwargs)
        _, p2 = ax.hist(list(d.values()), color=sns.color_palette()[i] , histtype='step', alpha=1,label=l, **kwargs)
        plot_list.append((p1, p2))
    max_auc = 0
    job = 0
    trial = 0
    dim = -1
    for j, x in d.items():
        try:    
            max_auc, trial, job = (max(x), x.index(max(x)), j) if max(x) > max_auc else (max_auc, trial, job)
        except TypeError: # in case of hidden dimensions
            max_auc = max([y for z in x for y in z])
            for k, hidden in enumerate(x):
                if max_auc in hidden:
                    dim = hidden.index(max_auc)
                    trial = k
                    job = j
    print(f"For {l}:\nJob {job}{' - Trial '+str(trial) if len(x)>1 else ''}{' - Dimension '+str(dim) if dim>=0 else ''}\nAUC {max_auc}\n") 
    best_dict[l] = (job, trial) if dim < 0 else (job, (trial, dim))
ax.set_ylabel("Count")
ax.set_xlabel("Area Under Curve")

# fix legend
leg = fig.legend(handles=plot_list, labels=labels, bbox_to_anchor=(0.98,0.85))
leg.get_frame().set_alpha(0.9)
# fig.subplots_adjust(left=0.1, right=0.85)

# store roc curve plots in designated directory
out_dir = f"output/ROC_curves_best"
try:
    os.mkdir(out_dir)
except FileExistsError:
    pass

out_file = out_dir + "/auc_scores_" + time.strftime("%y_%m_%d_%H%M")

# save plot without title
plt.savefig(out_file+"_no_title")

# save plot with title
plt.title("AUC Scores For Various Tests", y=1.04)
plt.savefig(out_file)
plt.close('all')
print("Best dict:\n",best_dict)
